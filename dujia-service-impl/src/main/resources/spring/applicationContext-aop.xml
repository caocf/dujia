<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务的传播特性
        REQUIRED 如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务
        SUPPORTS 如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行
    -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" rollback-for="Exception" read-only="false"/>
            <tx:method name="add*" rollback-for="Exception" read-only="false"/>
            <tx:method name="insert*" rollback-for="Exception" read-only="false"/>
            <tx:method name="update*" rollback-for="Exception" read-only="false"/>
            <tx:method name="delete*" rollback-for="Exception" read-only="false"/>
            <tx:method name="batch*" rollback-for="Exception" read-only="false"/>
            <tx:method name="cancel*" rollback-for="Exception" read-only="false"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 配置事务 切入点 -->
    <aop:config proxy-target-class="true">
    	<!-- 切入点 -->
    	<aop:pointcut id="txPointcut" expression="execution(* cn.com.gome.dujia.service..*.*(..))" />
    	
    	<!-- 通知 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
        
        <!-- 通过AOP切面实现读/写库选择 -->  
    	<aop:aspect order="-2147483648" ref="dynamicDataSourceProcessor">
       		<aop:around pointcut-ref="txPointcut" method="determineReadOrWriteDB"/>  
    	</aop:aspect> 
    </aop:config>

    <!--druid spring interceptor start-->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>cn.com.gome.dujia.service..*</value>
            </list>
        </property>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>
    <!--druid spring interceptor end-->
</beans>