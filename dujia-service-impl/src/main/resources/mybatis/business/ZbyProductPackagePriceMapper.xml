<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.gome.dujia.mapper.business.ZbyProductPackagePriceMapper">
    <resultMap id="BaseResultMap" type="cn.com.gome.dujia.model.ZbyProductPackagePrice">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="VARCHAR"/>
        <result column="package_id" property="packageId" jdbcType="VARCHAR"/>
        <result column="package_sale_date" property="packageSaleDate" jdbcType="DATE"/>
        <result column="retail_price" property="retailPrice" jdbcType="DECIMAL"/>
        <result column="distribution_sale_price" property="distributionSalePrice" jdbcType="DECIMAL"/>
        <result column="tc_direct_price" property="tcDirectPrice" jdbcType="DECIMAL"/>
        <result column="inventory_remainder" property="inventoryRemainder" jdbcType="INTEGER"/>
        <result column="inventory_stats" property="inventoryStats" jdbcType="TINYINT"/>
        <result column="opening_sale" property="openingSale" jdbcType="BIT"/>
        <result column="beforehand_booking_day" property="beforehandBookingDay" jdbcType="INTEGER"/>
        <result column="minPrice" property="minPrice" jdbcType="DECIMAL"/>
        <result column="maxPrice" property="maxPrice" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, product_id, package_id, package_sale_date, retail_price, distribution_sale_price,
        tc_direct_price, inventory_remainder, inventory_stats, opening_sale, beforehand_booking_day
    </sql>

  <resultMap id="simpleResultMap" type="cn.com.gome.dujia.dto.ZbyPackagePriceDto" >
    <result column="saleDate" property="saleDate" jdbcType="VARCHAR" />
    <result column="minPrice" property="price" jdbcType="DECIMAL" />
    <result column="inventory_remainder" property="stock" jdbcType="INTEGER" />
    <result column="inventory_stats" property="inventoryStats" jdbcType="TINYINT" />
    <result column="opening_sale" property="openingSale" jdbcType="BIT" />
  </resultMap>

  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO zby_product_package_price (
    id ,
    product_id ,
    package_id ,
    package_sale_date ,
    retail_price ,
    distribution_sale_price ,
    tc_direct_price ,
    inventory_remainder ,
    inventory_stats ,
    opening_sale ,
    beforehand_booking_day
    ) VALUES
    <foreach collection="list" index="index" item="item" separator=",">

      (
      #{item.id} ,
      #{item.productId} ,
      #{item.packageId} ,
      #{item.packageSaleDate} ,
      #{item.retailPrice} ,
      #{item.distributionSalePrice} ,
      #{item.tcDirectPrice} ,
      #{item.inventoryRemainder} ,
      #{item.inventoryStats} ,
      #{item.openingSale} ,
      #{item.beforehandBookingDay}
      )
    </foreach>
  </insert>

  <!-- 获取线路有效套餐班期列表 (日历)-->
  <select id="queryPriceListByProductId" resultMap="simpleResultMap" parameterType="java.lang.String">
        SELECT
            DATE_FORMAT(k.package_sale_date, '%Y-%m-%d') AS saleDate,
            MIN(k.tc_direct_price) AS minPrice,
            MAX(k.tc_direct_price) AS maxPrice,
            MAX(k.inventory_remainder) AS inventory_remainder,
			MAX(k.opening_sale) AS opening_sale,
			MAX(k.inventory_stats) AS inventory_stats
        FROM
            (
                SELECT
                    t.*
                FROM
                    zby_product_package_price t
                WHERE
                    t.product_id = #{productId}
                AND t.inventory_stats != 4
               -- AND t.inventory_remainder > 0
               -- AND t.opening_sale = 0
                GROUP BY
                    t.package_sale_date,
                    t.package_id
            ) k
        WHERE
            k.package_sale_date >= DATE_FORMAT(
                (
                   SELECT MIN(package_sale_date) FROM
                    (
                        SELECT d.advance_time,k.*
                        FROM
                          zby_product_package d
                          LEFT JOIN zby_product_package_price k
                          ON d.package_id = k.package_id
                        WHERE
                            d.is_delete = 0
                        AND k.inventory_stats!=4
                        AND k.product_id = #{productId}
                    ) AS t
                    WHERE
                    ((t.inventory_remainder > 0 AND t.opening_sale = 0 )OR t.opening_sale =1 )
                    AND
                      str_to_date(CONCAT(package_sale_date,' ', advance_time),'%Y-%m-%d %H:%i:%s')
                      >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL beforehand_booking_day DAY), '%Y-%m-%d %H:%i:%s')
                ),
                '%y%m%d'
            )
        GROUP BY
            k.package_sale_date
  </select>

  <!-- 根据线路id,套餐id,获取价格班期列表 (下单处日历)-->
  <select id="queryPriceListByProIdAndPackId" resultMap="simpleResultMap" parameterType="java.util.Map">
   	SELECT
        DATE_FORMAT(
            package_sale_date,
            '%Y-%m-%d'
        ) saleDate,
        tc_direct_price minPrice,
        inventory_remainder,
        inventory_stats,
        opening_sale
    FROM
        zby_product_package t LEFT JOIN
        zby_product_package_price d ON d.product_id = t.product_id AND d.package_id = t.package_id
    WHERE
        d.product_id = #{productId}
    AND d.package_id = #{packageId}
    AND
        str_to_date(CONCAT(d.package_sale_date,' ', t.advance_time),'%Y-%m-%d %H:%i:%s')
        >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL d.beforehand_booking_day DAY), '%Y-%m-%d %H:%i:%s')
  </select>

  <!--获取指定日期下产品所含套餐（可售）的最低价、最高价-->
  <select id="queryMinAndMaxPrice" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT MAX(t.tc_direct_price) AS maxPrice,MIN(t.tc_direct_price) AS minPrice
    FROM zby_product_package_price t
    WHERE t.product_id=#{productId}
    AND t.inventory_stats!=4
    AND DATE_FORMAT( t.package_sale_date,'%Y%m%d') = #{saleDate}
  </select>

  <!--获取产品默认最近可售卖日期，根据套餐的提前预定日期计算-->
  <select id="queryDefaultSaleDate" resultType="java.util.Date" parameterType="java.lang.String">
        SELECT MIN(package_sale_date) FROM
        (
            SELECT d.advance_time,k.*
            FROM
              zby_product_package d
              LEFT JOIN zby_product_package_price k
              ON d.package_id = k.package_id
            WHERE
				d.is_delete = 0
            AND k.inventory_stats!=4
            AND k.product_id = #{productId}
        ) AS t
        WHERE
          ((t.inventory_remainder > 0 AND t.opening_sale = 0 )OR t.opening_sale =1 )
        AND
          str_to_date(CONCAT(package_sale_date,' ', advance_time),'%Y-%m-%d %H:%i:%s')
          >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL t.beforehand_booking_day DAY), '%Y-%m-%d %H:%i:%s')
  </select>

  <!--获取指定套餐指定日期的套餐价格信息-->
  <select id="selectPackagePriceByIdDate" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT <include refid="Base_Column_List" />
    FROM zby_product_package_price t
    WHERE t.product_id=#{productId}
    AND t.package_id=#{packageId}
    AND t.package_sale_date=#{packageSaleDate,jdbcType=DATE}
  </select>

  <delete id="deleteInProductId" parameterType="java.lang.String">
    delete from zby_product_package_price where product_id =  #{productId}
  </delete>



    <delete id="deleteBeforeDate" parameterType="java.lang.String">
        delete from zby_product_package_price where
            <![CDATA[  DATE_FORMAT(package_sale_date, '%Y-%m-%d') < DATE_FORMAT(#{beginDate},'%Y-%m-%d')   ]]>
    </delete>

    <delete id="deleteByProductIdAndPackageId" parameterType="java.lang.String">
        delete from zby_product_package_price where product_id =  #{productId}
        <if test="packageIds != null">
           and  package_id NOT IN (
            <foreach collection="packageIds" index="index" item="item" separator=",">
                  #{item}
            </foreach>
            )
        </if>
    </delete>

    <update id="batchUpdate" parameterType="java.util.List" >
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE zby_product_package_price

            <set>
                <if test="item.productId != null">
                    product_id = #{item.productId},
                </if>
                <if test="item.packageId != null">
                    package_id = #{item.packageId},
                </if>
                <if test="item.packageSaleDate != null">
                    package_sale_date = #{item.packageSaleDate},
                </if>
                <if test="item.retailPrice != null">
                    retail_price = #{item.retailPrice},
                </if>
                <if test="item.distributionSalePrice != null">
                    distribution_sale_price = #{item.distributionSalePrice},
                </if>
                <if test="item.tcDirectPrice != null">
                    tc_direct_price = #{item.tcDirectPrice},
                </if>

                <if test="item.inventoryRemainder != null">
                    inventory_remainder = #{item.inventoryRemainder},
                </if>

                <if test="item.inventoryStats != null">
                    inventory_stats = #{item.inventoryStats},
                </if>

                <if test="item.openingSale != null">
                    opening_sale = #{item.openingSale},
                </if>

                <if test="item.beforehandBookingDay != null">
                    beforehand_booking_day = #{item.beforehandBookingDay},
                </if>

            </set>
            WHERE
            id = #{item.id}

        </foreach>
    </update>

	<!-- 获取当前时间线路最低价格 -->
    <select id="queryProductPrice" resultMap="BaseResultMap">
    	select product_id, min(tc_direct_price) tc_direct_price from zby_product_package_price group by product_id 
    </select>
</mapper>